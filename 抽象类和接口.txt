抽象类和接口的区别：
	1.接口通过implements实现，而抽象类的实现使用extends
	2.接口没有属性成员，而抽象类有属性成员
	3.接口没有构造函数，抽象类可以有构造函数
	4.接口中的方法都是public类型，而抽象类中的方法可以private、protected、public修饰
	5.一个类同时可以实现多个接口，但之恩给你实现一个抽象类(单继承)
	6.接口的目的是定义一个规范，抽象类是类的实现
	
抽象类和接口的相同之处：
	方法不能有: {}，即不能实现方法，只能写方法定义 
	抽象类是一种特殊的类，而接口是一种特殊的抽象类
	通常配合面向对象的多态性一起使用
	都不能实例化对象
	
	
	
	
	
	
	
	
抽象类：为了方便继承而引入的，使用abstract修饰，只要在类中有一个抽象方法，那么这个类就是抽象类，类就应该要使用abstract关键字修饰；抽象类中可以有不是抽象的成员方法和成员属性，但访问全向不能使用private修饰为私有；抽象类无法实例化

抽象方法：只有方法定义的方法，没有方法体，没有方法体指的是声明方法时没有花括号及其中的内容，而是在声明方法时直接在方法名后加上分号结束；在声明抽象方法时，还需要使用关键字abstract修饰。

继承抽象类的子类：子类中必须实现父级抽象类中的所有抽象方法，否则子类中还是存在着抽象方法，所以还是抽象类，会导致出错。如果抽象类中的构造方法为protected，则子类中必须重写构造方法，然后再构造方法中继承父级构造方法：parent::__construct()




接口：因为PHP只支持单继承，继承了一个抽象类之后就不能再有其他父类了，为解决这个问题，PHP引入了接口，接口是一个特殊的抽象类

如果抽象类中的所有方法都是抽象方法，就可以使用接口技术；接口中声明的方法必须都是抽象方法，另外不能在借口中声明变量(属性)，只能使用const关键字声明为常量的成员属性，而且接口中所有成员都必须有public的访问权限。

类声明使用 class 关键字，接口的声明使用 interface 关键字

格式：
interface 接口名称{	

常量成员	//接口中没有变量属性
抽象方法	//接口中的方法必须是抽象方法，但不需要abstract

}

接口中的所有方法都要求是抽象方法，所以不需要在方法前使用abstract，而且也不需要显式地使用public访问权限进行修饰，默认权限就是public，而且也只能是public

接口和抽象类一样无法实例化对象，它是一种比抽象类更严格的规范，也需要通过子类实现，但可以直接使用接口名称在接口外面获取常量成员的值












