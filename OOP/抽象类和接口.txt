抽象类和接口的区别：
	1.接口通过implements实现，而抽象类的实现使用extends
	2.接口没有变量属性成员，而抽象类有变量属性成员
	3.接口没有构造函数，抽象类可以有构造函数并被继承
	4.接口中的方法都是public类型，而抽象类中的方法可以private、protected、public修饰
	5.接口中的方法必然是抽象方法，不需要使用abstract定义，抽象类中可以含有非抽象方法，抽象方法使用abstract定义
	6.一个类同时可以实现多个接口，但只能继承一个抽象类(单继承)
	7.接口的声明使用interface，抽象类声明使用abstract
	
抽象类和接口的相同之处：
	1.抽象方法方法不能有{}和方法体，只能写方法定义 
	2.抽象类是一种特殊的类，而接口是一种特殊的抽象类
	3.通常配合面向对象的多态性一起使用
	4.都不能实例化对象，只能通过子类继承或实现其中的所有抽象类
	5.都可以有const关键字定义的常量，并且在类外面能直接使用：类名(接口名)::常量名
	
	
	
	
	
抽象类：为了方便继承而引入的，使用abstract修饰，只要在类中有一个抽象方法，那么这个类就是抽象类，类就应该要使用abstract关键字修饰；抽象类中可以有不是抽象的成员方法和成员属性，但访问全向不能使用private修饰为私有；抽象类无法实例化

抽象方法：只有方法定义的方法，没有方法体，没有方法体指的是声明方法时没有花括号及其中的内容，而是在声明方法时直接在方法名后加上分号结束；在声明抽象方法时，还需要使用关键字abstract修饰。

继承抽象类的子类：子类中必须实现父级抽象类中的所有抽象方法，否则子类中还是存在着抽象方法，所以还是抽象类，会导致出错。如果抽象类中的构造方法为protected，则子类中必须重写构造方法，然后再构造方法中继承父级构造方法：parent::__construct()




接口：因为PHP只支持单继承，继承了一个抽象类之后就不能再有其他父类了，为解决这个问题，PHP引入了接口

接口定义：接口是一个特殊的抽象类,但接口可以多继承，接口是特殊的抽象类，使用interface关键字定义接口，接口内部方法都是抽象方法，而且不需要使用abstract修饰，而且接口中没有变量属性，只有使用const声明的常量属性。接口中的成员必须是public访问权限(默认)

接口与抽象类：接口和抽象类一样无法实例化对象，它是一种比抽象类更严格的规范，也需要通过子类实现，但可以直接使用接口名称在接口外面获取常量成员的值：接口名::常量名


格式：
interface 接口名称{	

常量成员	//接口中没有变量属性，常量使用const关键字声明
抽象方法	//接口中的方法必须是抽象方法，但不需要abstract

}

接口继承接口：一个接口可以继承另一个接口，使用的是extends关键字

类实现接口：
	1.抽象类实现接口：可以实现接口中的部分方法，也需要使用关键字 implements，但继承抽象类的子类一定要把接口中的所有方法实现
	2.普通类实现接口：需要实现接口中的所有抽象方法才可以创建对象。
	3.一个类可以实现多个接口，每个接口之间使用逗号隔开，实现多接口格式：
		class 类名 implements 接口1 , 接口2 , ....{
			//实现接口中的所有抽象方法
		}
	4.一个类中同时继承一个父类和实现n个接口，必须先继承一个类，然后再实现n个接口
		格式：
		class 类名 extends 父类名 implements 接口1 , 接口2 ,...{
			//必须实现接口中的所有方法
		}

接口的应用：
	1.一些已经开发好的系统，在结构上进行较大的调整已经不大可能实现，这时可以通过自定义一些接口并追加相应的实现完成功能结构的扩展












